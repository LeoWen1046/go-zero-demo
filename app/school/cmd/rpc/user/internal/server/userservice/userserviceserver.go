// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"example/app/school/cmd/rpc/user/github.com/example/user"
	"example/app/school/cmd/rpc/user/internal/logic/userservice"
	"example/app/school/cmd/rpc/user/internal/svc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := userservicelogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) UserInfo(ctx context.Context, in *user.UserInfoReq) (*user.UserInfoResp, error) {
	l := userservicelogic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServiceServer) UserInfoUpdate(ctx context.Context, in *user.UserInfoUpdateReq) (*user.UserInfoUpdateResp, error) {
	l := userservicelogic.NewUserInfoUpdateLogic(ctx, s.svcCtx)
	return l.UserInfoUpdate(in)
}

func (s *UserServiceServer) UserList(ctx context.Context, in *user.UserListReq) (*user.UserListResp, error) {
	l := userservicelogic.NewUserListLogic(ctx, s.svcCtx)
	return l.UserList(in)
}
